/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
//public class ListNode {
//    int val;
//    ListNode next;
//    ListNode() {}
//    ListNode(int val) { this.val = val; }
//    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
//}
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
//        int l1Index = 0, l2Index = 1;
        int temp = 0;
        ListNode headNode = new ListNode();
        ListNode tempNode = headNode;
        while (l1 != null || l2 != null) {
            int v1 = l1==null?0:l1.val;
            int v2 = l2==null?0:l2.val;
            int value = v1 + v2 + temp;
            temp = 0;
            if (value >= 10) {
                temp = 1;
                value = value % 10;
            }
            tempNode.next = new ListNode(value);
            tempNode = tempNode.next;
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;
        }
        if (temp == 1) {
            tempNode.next = new ListNode(1);
        }
        return headNode.next;
    }
}

//runtime:1 ms
//memory:43.9 MB
